[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Writing Reproducible Manuscripts in R & Python",
    "section": "",
    "text": "Welcome!\nOpen Science practices are becoming central to the way research is conducted. In this workshop, you will learn to set up a reproducible workflow to create a publication-ready manuscript that combines data, R or Python code, text, and references.\nWe will use the Quarto publishing system in conjunction with R or Python to create a publication-ready manuscript that combines data, code, text, and references. More specifically, you will learn how to:\n\nCreate a reproducible project (folder) structure\nUse Markdown syntax effectively for writing text\nRun analyses in code chunks or cells\nManage references using Zotero and Better BibTex for Zotero\nRender your Quarto project to docx, HTML, and pdf files\n\nThis workflow reduces the amount of human error, improves computational reproducibility and makes updating your scientific manuscript more efficient.\nBy the end of the workshop, you will be sufficiently familiar with the tools and components behind a reproducible manunscript, so you can implement the workflow in your own research projects.\nOur workshop material is licensed under a Creative Commons Attribution 4.0 International License. You can view the license on our GitHub repository.\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "acknowledgements.html",
    "href": "acknowledgements.html",
    "title": "Acknowledgements",
    "section": "",
    "text": "These materials were drafted with the help from the following contributors:\n\nNeha Moopen\nDorien Huijser\n\nOur materials have borrowed liberally from Mock (2022b), Mock (2022a), Hartgerink (2017) and the Quarto documentation (Quarto (n.d.)). See also the references.\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Time\nActivity\n\n\n\n\n09:00\nWalk-in, tech support\n\n\n09:15\nIntroduction\n\n\n09:30\nGetting started\n\n\n10:00\nWriting\n\n\n10:30\nCoffee break\n\n\n10:45\nCode\n\n\n11:15\nRendering your manuscript\n\n\n11:50\nRecap & Questions\n\n\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Schedule"
    ]
  },
  {
    "objectID": "installation-and-setup.html",
    "href": "installation-and-setup.html",
    "title": "Installation & Setup",
    "section": "",
    "text": "A. Install Quarto and your programming language\nTo prepare yourself for the workshop, please follow both step A and B listed below.\nThe installation procedure under A. will differ depending on how you choose to work with the Quarto publishing system. Below we go into the following 3 situations:",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#a.-install-quarto-and-your-programming-language",
    "href": "installation-and-setup.html#a.-install-quarto-and-your-programming-language",
    "title": "Installation & Setup",
    "section": "1. Install Python and Jupyter Lab",
    "text": "1. Quarto in Jupyter Lab (Python)2. Quarto in VS Code (R or Python)3. Quarto in Rstudio (R)\n\n\n\n1. Install Python and Jupyter Lab\nIf you don’t have Python and Jupyter Lab installed yet, follow only step 1 “Install Python” on this page. Here you will install Anaconda Navigator, which installs both Python and Jupyter Lab.\n\n\n2. Install Quarto\n\nDownload Quarto from https://quarto.org/docs/get-started/\nOpen the msi/executable file. Answer “Yes” to the pop-up question “Do you want to allow this app to make changes to your device?”. Then start the set-up wizard.\nChoose Install for all users. If you do not have administrator rights, select Install just for you.\nChoose the installation location, usually the default proposed location is fine.\nInstallation will start. After installation, click Finish.\n\n\n\n3. Enable the Quarto extension in Jupyter Lab (optional)\nAlthough it is not strictly necessary, the Quarto extension in Jupyter Lab gives you nice Quarto previews of your Jupyter notebook files. To enable it, follow the steps listed under “Installing the extension” on this page of the Quarto documentation.\n\n\n\n\n1. Install Visual Studio Code\nInstall Visual Studio Code (VS Code) using the set-up instructions for your operating system.\n\nDownload VS Code from https://code.visualstudio.com/\nWalk through the installation steps. The default installation location is usually fine. If you have administrator rights, we recommend to Add VS Code to the PATH if you’re using Windows.\n\n\n\n2. Set up Python and/or R for use in VS Code\n\nR: Follow the instructions here for installing R and using it in VS Code.\n\nIn VS Code, you can open an R terminal to install the languageserver package.\n\nPython: Follow the instructions here for installing a Python interpreter, or see the installation instructions in our Introduction to Python workshop.\n\nBe sure to also install the Jupyter extension in VS Code if you wish to work with Jupyter notebooks (.ipynb).\n\n\n\n\n3. Install Quarto\n\nDownload Quarto from https://quarto.org/docs/get-started/\nOpen the msi/executable file. Answer “Yes” to the pop-up question “Do you want to allow this app to make changes to your device?”. Then start the set-up wizard.\nChoose Install for all users. If you do not have administrator rights, select Install just for you.\nChoose the installation location, usually the default proposed location is fine.\nInstallation will start. After installation, click Finish.\n\n\n\n4. Make VS Code, Quarto and R/Python talk to each other\nNow that everything is installed, we need to make sure VS Code can use Quarto and Python/R.\n\nOpen VS Code.\nOpen the Extensions view in VS Code (Ctrl+Shift+X on Windows and Linux, Cmd+Shift+X on macOS)\nInstall the Quarto extension from the Extensions view in VS Code.\nIf you want to use Python in VS Code:\n\nFrom the Extensions view in VS Code, install the Python extension.\nSet the Python interpreter: Open the command palette in VS Code (Ctrl+Shift+P on Windows and Linux, Cmd+Shift+P on macOS), type “Python: Select Interpreter”, and select the relevant Python interpreter from the interpreters that VS Code can find.\n\nIf you want to use R in VS Code: install the R extension from the extensions view in VS Code.\nCheck whether Quarto is detected:\n\nOpen a new terminal: Terminal &gt; New terminal.\nType quarto --version\nIf a version number appears, Quarto is detected.\n\nCheck whether Python is detected:\n\nOpen a new terminal or use the one that you used in step 6a.\nType python --version\nIf a version number appears, Python is detected.\n\nCheck whether R is detected: if you can open an R terminal, it shows you the R version and R is detected successfully.\n\n\n\n\n\n1. Install R and Rstudio\nIf you do not yet have an installation for R and Rstudio, you need to install them on your device.\n\nIf you have a personal device with administrator/installation rights:\n\nInstall R from https://cran.rstudio.com/\nInstall Rstudio from https://posit.co/download/rstudio-desktop/#download\n\nIf you have a Utrecht University managed device:\n\nInstall the R for Windows suite from the Software Center. It should contain both R and Rstudio.\nCheck the installation. R packages on a UU laptop are usually installed on a so-called ‘mounted’ drive. This causes problems with the performance. Check the installation as follows:\n\nOpen RStudio.\nWrite the following line of code in your console: .libPaths(), and press enter to execute.\nIf the response starts with // or \\\\, you are installing on a mounted drive. Follow the steps below to change the installation location.\n\n\nIf you already have an existing R and RStudio installation:\n\nCheck which version of RStudio you have installed: Go to Help &gt; About RStudio.\nIf your RStudio version is older than v2022.07, then you should update it. Quarto recommends using the latest version of RStudio (currently v.2023.06).\n\n\n\n\n2. Install Quarto and R Markdown\n\nIn the RStudio console, type install.packages(\"rmarkdown\") and install.packages(\"quarto\")\nLoad both packages with library(rmarkdown) and library(quarto)\nRestart RStudio.\nCheck whether Quarto is detected: go to the Terminal (next to the Console) and type quarto --version. Alternatively, go to File &gt; New project &gt; New directory and check whether the Quarto outputs are presented as options (Quarto project, Quarto website, Quarto blog, Quarto book)\n\n\n\nTroubleshooting\n\nPackages are being installed on a mounted drive\nThis can cause various errors, and even if everything goes right, installing new packages takes ages.\nSolution 1: There is a solution to prevent problems with mounted drives for applications like R, RStudio and Office. Read more about the solution on intranet.\nSolution 2:\n\nCreate a folder R-packages on a local drive.\nCopy the location to that drive. For example: C:/Users/User/R-packages.\nRun the following line of code: file.edit(file.path(\"~\", \".Rprofile\"))\nPaste .libPaths(\"C:/Users/User/R-packages\") in the editor and save the file.\nRestart your R session\nClick on Packages&gt;Install. Is Install to library pointing to C:/Users/User/R-packages?\nIf not: check if the path is correctly spelled. Try inverting the slashes (\\ instead of /). You may need to use double slashes (\\\\ or //).\nTick ‘source on save’, click save, and check Packages&gt;Install again.\n\n\n\n“Unable to move temporary installation” (Windows error)\nDo you get issues like this:\n&gt; install.packages(\"tibble\")\nInstalling package into ‘C:/Users/UserName/R’\n(as ‘lib’ is unspecified)\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/3.4/tibble_1.4.2.zip'\nContent type 'application/zip' length 172649 bytes (168 KB)\ndownloaded 168 KB\n\npackage ‘tibble’ successfully unpacked and MD5 sums checked\nWarning in install.packages :\n  unable to move temporary installation ‘C:\\Users\\UserName\\R\\file18b813387562\\tibble’ to ‘C:\\Users\\UserName\\R\\tibble’\nThe downloaded binary packages are in\nC:\\Users\\UserName\\AppData\\Local\\Temp\\RtmpYh5ogU\\downloaded_packages\nCheck for the line unable to move temporary installation. Your virus scanner might be blocking the installation of tidyverse.\nThe solution (found here) is to enter:\ntrace(utils:::unpackPkgZip, edit=TRUE)\nYou should see:\nTracing function \"unpackPkgZip\" in package \"utils (not-exported)\"\n[1] \"unpackPkgZip\"\nAnd a file should open. Change 0.5 in line 142 to 2.5, save the file, and try installing the package again.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#install-python-and-jupyter-lab",
    "href": "installation-and-setup.html#install-python-and-jupyter-lab",
    "title": "Installation & Setup",
    "section": "",
    "text": "If you don’t have Python and Jupyter Lab installed yet, follow only step 1 “Install Python” on this page. Here you will install Anaconda Navigator, which installs both Python and Jupyter Lab.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#install-quarto",
    "href": "installation-and-setup.html#install-quarto",
    "title": "Installation & Setup",
    "section": "2. Install Quarto",
    "text": "2. Install Quarto\n\nDownload Quarto from https://quarto.org/docs/get-started/\nOpen the msi/executable file. Answer “Yes” to the pop-up question “Do you want to allow this app to make changes to your device?”. Then start the set-up wizard.\nChoose Install for all users. If you do not have administrator rights, select Install just for you.\nChoose the installation location, usually the default proposed location is fine.\nInstallation will start. After installation, click Finish.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#enable-the-quarto-extension-in-jupyter-lab-optional",
    "href": "installation-and-setup.html#enable-the-quarto-extension-in-jupyter-lab-optional",
    "title": "Installation & Setup",
    "section": "3. Enable the Quarto extension in Jupyter Lab (optional)",
    "text": "3. Enable the Quarto extension in Jupyter Lab (optional)\nAlthough it is not strictly necessary, the Quarto extension in Jupyter Lab gives you nice Quarto previews of your Jupyter notebook files. To enable it, follow the steps listed under “Installing the extension” on this page of the Quarto documentation.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#install-visual-studio-code",
    "href": "installation-and-setup.html#install-visual-studio-code",
    "title": "Installation & Setup",
    "section": "1. Install Visual Studio Code",
    "text": "1. Install Visual Studio Code\nInstall Visual Studio Code (VS Code) using the set-up instructions for your operating system.\n\nDownload VS Code from https://code.visualstudio.com/\nWalk through the installation steps. The default installation location is usually fine. If you have administrator rights, we recommend to Add VS Code to the PATH if you’re using Windows.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#set-up-python-andor-r-for-use-in-vs-code",
    "href": "installation-and-setup.html#set-up-python-andor-r-for-use-in-vs-code",
    "title": "Installation & Setup",
    "section": "2. Set up Python and/or R for use in VS Code",
    "text": "2. Set up Python and/or R for use in VS Code\n\nR: Follow the instructions here for installing R and using it in VS Code.\n\nIn VS Code, you can open an R terminal to install the languageserver package.\n\nPython: Follow the instructions here for installing a Python interpreter, or see the installation instructions in our Introduction to Python workshop.\n\nBe sure to also install the Jupyter extension in VS Code if you wish to work with Jupyter notebooks (.ipynb).",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#install-quarto-1",
    "href": "installation-and-setup.html#install-quarto-1",
    "title": "Installation & Setup",
    "section": "3. Install Quarto",
    "text": "3. Install Quarto\n\nDownload Quarto from https://quarto.org/docs/get-started/\nOpen the msi/executable file. Answer “Yes” to the pop-up question “Do you want to allow this app to make changes to your device?”. Then start the set-up wizard.\nChoose Install for all users. If you do not have administrator rights, select Install just for you.\nChoose the installation location, usually the default proposed location is fine.\nInstallation will start. After installation, click Finish.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#make-vs-code-quarto-and-rpython-talk-to-each-other",
    "href": "installation-and-setup.html#make-vs-code-quarto-and-rpython-talk-to-each-other",
    "title": "Installation & Setup",
    "section": "4. Make VS Code, Quarto and R/Python talk to each other",
    "text": "4. Make VS Code, Quarto and R/Python talk to each other\nNow that everything is installed, we need to make sure VS Code can use Quarto and Python/R.\n\nOpen VS Code.\nOpen the Extensions view in VS Code (Ctrl+Shift+X on Windows and Linux, Cmd+Shift+X on macOS)\nInstall the Quarto extension from the Extensions view in VS Code.\nIf you want to use Python in VS Code:\n\nFrom the Extensions view in VS Code, install the Python extension.\nSet the Python interpreter: Open the command palette in VS Code (Ctrl+Shift+P on Windows and Linux, Cmd+Shift+P on macOS), type “Python: Select Interpreter”, and select the relevant Python interpreter from the interpreters that VS Code can find.\n\nIf you want to use R in VS Code: install the R extension from the extensions view in VS Code.\nCheck whether Quarto is detected:\n\nOpen a new terminal: Terminal &gt; New terminal.\nType quarto --version\nIf a version number appears, Quarto is detected.\n\nCheck whether Python is detected:\n\nOpen a new terminal or use the one that you used in step 6a.\nType python --version\nIf a version number appears, Python is detected.\n\nCheck whether R is detected: if you can open an R terminal, it shows you the R version and R is detected successfully.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#install-r-and-rstudio",
    "href": "installation-and-setup.html#install-r-and-rstudio",
    "title": "Installation & Setup",
    "section": "1. Install R and Rstudio",
    "text": "1. Install R and Rstudio\nIf you do not yet have an installation for R and Rstudio, you need to install them on your device.\n\nIf you have a personal device with administrator/installation rights:\n\nInstall R from https://cran.rstudio.com/\nInstall Rstudio from https://posit.co/download/rstudio-desktop/#download\n\nIf you have a Utrecht University managed device:\n\nInstall the R for Windows suite from the Software Center. It should contain both R and Rstudio.\nCheck the installation. R packages on a UU laptop are usually installed on a so-called ‘mounted’ drive. This causes problems with the performance. Check the installation as follows:\n\nOpen RStudio.\nWrite the following line of code in your console: .libPaths(), and press enter to execute.\nIf the response starts with // or \\\\, you are installing on a mounted drive. Follow the steps below to change the installation location.\n\n\nIf you already have an existing R and RStudio installation:\n\nCheck which version of RStudio you have installed: Go to Help &gt; About RStudio.\nIf your RStudio version is older than v2022.07, then you should update it. Quarto recommends using the latest version of RStudio (currently v.2023.06).",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#install-quarto-and-r-markdown",
    "href": "installation-and-setup.html#install-quarto-and-r-markdown",
    "title": "Installation & Setup",
    "section": "2. Install Quarto and R Markdown",
    "text": "2. Install Quarto and R Markdown\n\nIn the RStudio console, type install.packages(\"rmarkdown\") and install.packages(\"quarto\")\nLoad both packages with library(rmarkdown) and library(quarto)\nRestart RStudio.\nCheck whether Quarto is detected: go to the Terminal (next to the Console) and type quarto --version. Alternatively, go to File &gt; New project &gt; New directory and check whether the Quarto outputs are presented as options (Quarto project, Quarto website, Quarto blog, Quarto book)",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#troubleshooting",
    "href": "installation-and-setup.html#troubleshooting",
    "title": "Installation & Setup",
    "section": "Troubleshooting",
    "text": "Troubleshooting\n\nPackages are being installed on a mounted drive\nThis can cause various errors, and even if everything goes right, installing new packages takes ages.\nSolution 1: There is a solution to prevent problems with mounted drives for applications like R, RStudio and Office. Read more about the solution on intranet.\nSolution 2:\n\nCreate a folder R-packages on a local drive.\nCopy the location to that drive. For example: C:/Users/User/R-packages.\nRun the following line of code: file.edit(file.path(\"~\", \".Rprofile\"))\nPaste .libPaths(\"C:/Users/User/R-packages\") in the editor and save the file.\nRestart your R session\nClick on Packages&gt;Install. Is Install to library pointing to C:/Users/User/R-packages?\nIf not: check if the path is correctly spelled. Try inverting the slashes (\\ instead of /). You may need to use double slashes (\\\\ or //).\nTick ‘source on save’, click save, and check Packages&gt;Install again.\n\n\n\n“Unable to move temporary installation” (Windows error)\nDo you get issues like this:\n&gt; install.packages(\"tibble\")\nInstalling package into ‘C:/Users/UserName/R’\n(as ‘lib’ is unspecified)\ntrying URL 'https://cran.rstudio.com/bin/windows/contrib/3.4/tibble_1.4.2.zip'\nContent type 'application/zip' length 172649 bytes (168 KB)\ndownloaded 168 KB\n\npackage ‘tibble’ successfully unpacked and MD5 sums checked\nWarning in install.packages :\n  unable to move temporary installation ‘C:\\Users\\UserName\\R\\file18b813387562\\tibble’ to ‘C:\\Users\\UserName\\R\\tibble’\nThe downloaded binary packages are in\nC:\\Users\\UserName\\AppData\\Local\\Temp\\RtmpYh5ogU\\downloaded_packages\nCheck for the line unable to move temporary installation. Your virus scanner might be blocking the installation of tidyverse.\nThe solution (found here) is to enter:\ntrace(utils:::unpackPkgZip, edit=TRUE)\nYou should see:\nTracing function \"unpackPkgZip\" in package \"utils (not-exported)\"\n[1] \"unpackPkgZip\"\nAnd a file should open. Change 0.5 in line 142 to 2.5, save the file, and try installing the package again.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "installation-and-setup.html#b.-zotero-for-reproducible-citations",
    "href": "installation-and-setup.html#b.-zotero-for-reproducible-citations",
    "title": "Installation & Setup",
    "section": "B. Zotero for reproducible citations",
    "text": "B. Zotero for reproducible citations\n\nInstall Zotero.\n\nIf you work on a Utrecht University-managed laptop, you can install Zotero from the Software Center.\nIf you work on a private device, follow the installation instructions on the Zotero installation page.\n\nInstall the Zotero connector for your browser. This connector makes sure you can directly save a reference to Zotero from your browser.\nInstall the Better BibTex extension for Zotero. This makes sure your references are saved in a format that Quarto can work with.\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Preparation",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "workshop-materials.html",
    "href": "workshop-materials.html",
    "title": "Workshop Materials",
    "section": "",
    "text": "The workshop materials consist of a project structure and dummy scripts that will be used during the session.\n\nRight-click on the following link and select Save Link As…: my-reproducible-manuscript.zip\nSave the zip file in a location that you can easily access. We recommend to not use the default download location of your browser.\nExtract the contents of the zipped file.\n\nThe materials should look like this:\nmy-reproducible-manuscript\n├── data\n│   └── data.csv\n├── docs\n├── results\n└── scripts\n│   ├── do_addition.py\n│   ├── do_addition.R\n│   ├── dummy.py\n│   └── dummy.R\n├── LICENSE.md\n└── README.md\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Preparation",
      "Workshop Materials"
    ]
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Frank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Once you have followed all the steps for Installation and setup, you can start to create the Quarto document that you will be working in during the workshop.\n\nRstudioVScodeJupyter Lab\n\n\n1. Create an RStudio Project\n\nIn RStudio, click File &gt; New Project &gt; Existing Directory.\nBrowse to your folder my-reproducible-manuscript in which you have saved the workshop materials.\nCheck the Open in new session option.\nClick Create Project. This will create a my-reproducible-manuscript.Rproj file.\n\n2. Document your project for reproducibility\nYour project already contains pre-made folders, a README file and a License. Open the README.md file and fill it with a few relevant details, for example:\n\nPurpose and contents of the project\nYour name (Author)\nThe date of creation\nEtc.\n\n3. Create a Quarto document for your manuscript.\n\nIn RStudio, click File -&gt; New File -&gt; Quarto Document\nGive your document a title, such as My Reproducible Manuscript.\nAdd yourself as an author.\nFor now, the default output format (HTML) and engine (knitr) are fine.\nUncheck the Use visual markdown editor option.\nClick Create. A new Quarto document opens.\n\n4. Render the Quarto document to HTML\n\nSave the Quarto document in the docs folder within the my-reproducible-manuscript folder.\nGive the file a clear name, without using spaces. For example, my-reproducible-manuscript.qmd.\nOnce everything has been saved correctly, click the Render button in the menu bar.\nThe rendered HTML copy of your document will appear in your web browser or alongside the editor in RStudio. You will also see a my-reproducible-manuscript.html file appear in the docs folder.\n\n\n\n1. Open the my-reproducible-manuscript folder in Visual Studio Code\nIn VS Code, click File &gt; Open Folder… &gt; my-reproducible-manuscript &gt; Select folder.\n2. Document your project for reproducibility\nYour project already contains pre-made folders, a README file and a License. Open the README.md file and fill it with a few relevant details, for example:\n\nPurpose and contents of the project\nYour name (Author)\nThe date of creation\nEtc.\n\n3. Create a Quarto document for your manuscript.\n\nIn the Command Palette of VS Code (usually at the top of the screen, looks like a search bar), type &gt; Quarto: New Document. This will open up a new empty Quarto document.\nGive your new document a Title, such as My Reproducible Manuscript.\nCopy the following block of text and code into your Quarto document:\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see &lt;https://quarto.org&gt;.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n```{python}\n1 + 1\n```\n\nYou can add options to executable code like this\n\n```{python}\n#| echo: false\n2 * 2\n```\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n4. Render the Quarto document to HTML\n\nSave the Quarto document in the docs folder within the my-reproducible-manuscript folder.\nGive the file a clear name, without using spaces. For example, my-reproducible-manuscript.qmd.\nIn VS Code, click Terminal -&gt; Split Terminal\nIn the newly created Terminal, run the following command:\n\nquarto render my-reproducible-manuscript.qmd\nThe rendered HTML copy of your document will appear in your web browser or alongside the editor in VS Code. You will also see a my-reproducible-manuscript.html file appear in the docs folder.\n\n\n1. Open the my-reproducible-manuscript folder in Jupyter Lab\n\nOpen Anaconda Navigator &gt; Jupyter Lab.\nStart a clean environment: close running kernels and non-relevant files you have open.\nIn the files section of Jupyter Lab, navigate to the location where you stored the my-reproducible-manuscript folder.\n\n2. Document your project for reproducibility\nYour project already contains pre-made folders, a README file and a License. Open the README.md file and fill it with a few relevant details, for example:\n\nPurpose and contents of the project\nYour name (Author)\nThe date of creation\nEtc.\n\n3. Open the Jupyter Notebook\n\nNavigate to the docs folder.\nOpen the my-reproducible-manuscript.ipynb file.\nGive your new document a Title, such as My Reproducible Manuscript and save your changes.\n\n4. Render the Quarto document to HTML\n\nIn Jupyter Lab, click File -&gt; New -&gt; Terminal\nSet the working directory to your project folder in the terminal, such as (use tab for autocompletion):\n\ncd .\\path\\to\\my-reproducible-manuscript\\\n\nIn the newly created Terminal, run the following command:\n\nquarto render docs/my-reproducible-manuscript.ipynb\nYou will see a my-reproducible-manuscript.html file appear in the docs folder. Click on it to open it.\n\n\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "markdown-syntax.html",
    "href": "markdown-syntax.html",
    "title": "Markdown Syntax",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Writing",
      "Markdown Syntax"
    ]
  },
  {
    "objectID": "markdown-syntax.html#exercise",
    "href": "markdown-syntax.html#exercise",
    "title": "Markdown Syntax",
    "section": "Exercise",
    "text": "Exercise\nRecreate the following paragraph in your Quarto document using Markdown:\nMeet Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. \nTo learn more about Quarto see https://quarto.org.\n\nMeet the penguins\n\nThe penguins data from the palmerpenguins package contains size measurements for \n344 penguins from three species observed on three islands in the Palmer Archipelago, Antarctica. \n\nWhat It Should Look Like\n\n\n\nLinks you need\n\nYou can find the illustration of the three species of Palmer Archipelago penguins (Chinstrap, Gentoo, and Adelie) here: https://allisonhorst.github.io/palmerpenguins/reference/figures/lter_penguins.png.\nThe link to the Palmer Penguins package is here: https://allisonhorst.github.io/palmerpenguins/\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Writing",
      "Markdown Syntax"
    ]
  },
  {
    "objectID": "referencing.html",
    "href": "referencing.html",
    "title": "Referencing",
    "section": "",
    "text": "Exercise\nWe’re assuming installation of Zotero Desktop, Zotero Connector, and Better BibTex for Zotero were completed successfully.\n\nOpen Zotero Desktop\n\n\nlog into your account\ncreate a new collection for your project, for example: my-reproducible-manuscript\n\n\nOpen your Web Browser\n\n\ndouble-check that you can find the Zotero Connector in your browser\nrun a web / Google Scholar search for “Allison Horst PalmerPenguins Package”\nuse the Zotero Connector to save the reference to your collection\n\n\nIn Zotero Desktop,\n\n\nright-click your collection and select Export Collection\nfor the Format, select Better BibTex\nclick the option to Keep updated\nprovide the file name as references and save it in the same folder as your Quarto document\n\n\nIn RStudio or VS Code,\n\n\nupdate the YAML to include the bibliography:\n---\ntitle: \"My Reproducible Manuscript\"\nformat: html\nbibliography: references.bib\n---\n\n\nInsert a Citation\n\n\nin the text of your Quarto document, insert the PalmerPenguins citation (hint: refer to the slides and your .bib file to figure how to format the citation)\nalternatively, when using the Visual Editor option - you can use the citation dialog/option to insert citations directly.\nrender the document\n\n\nRepetition\n\n\nrepeat Step 2 with another reference\nrepeat Step 5 to insert the new reference\nif you did a bracketed citation before, do an in-text citation this time (or vice versa)\n\nNote: Steps 1, 3, 4 can be skipped. These were a one-time thing.\n\nBONUS: Change the citation style\n\n\nDownload a csl file into your project\nUpdate the YAML to reference the citation style file:\n---\ntitle: \"My Reproducible Manuscript\"\nformat: html\nbibliography: references.bib\ncsl: your-file-name.csl\n---\nRe-render your document and see if the citation style has changed!\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Writing",
      "Referencing"
    ]
  },
  {
    "objectID": "code-chunks.html",
    "href": "code-chunks.html",
    "title": "Code Chunks",
    "section": "",
    "text": "Exercise\nOpen the dummy.R (if you’re using R) or dummy.py (if you’re using Python) script from the scripts folder.",
    "crumbs": [
      "Code",
      "Code Chunks"
    ]
  },
  {
    "objectID": "code-chunks.html#exercise",
    "href": "code-chunks.html#exercise",
    "title": "Code Chunks",
    "section": "",
    "text": "Insert a code chunk at the beginning of your document (i.e. below the YAML header) and insert the relevant code from the script to load the necessary packages.\nInsert a code chunk in the Results section of your document and copy a piece/section of the dummy script into it.\nRun the code chunk and see if it works alright.\nRepeat the previous three steps until the whole dummy script has been incorporated within code chunks in your manuscript.\nRender the document and check the output.\nPlay around with the code chunk options and re-render the document.\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Code",
      "Code Chunks"
    ]
  },
  {
    "objectID": "inline-code.html",
    "href": "inline-code.html",
    "title": "Inline Code",
    "section": "",
    "text": "Slides",
    "crumbs": [
      "Code",
      "Inline Code"
    ]
  },
  {
    "objectID": "inline-code.html#exercise",
    "href": "inline-code.html#exercise",
    "title": "Inline Code",
    "section": "Exercise",
    "text": "Exercise\nTake a couple of minutes to play around with the possibilities of inline code:\n\nDo a simple calculation such as 25 + 25 within your text.\nReport the number of “Gentoo” and/or “Chinstrap” species of penguins within the data (hint: refer to the example in the slides).\nTry out one other (simple) in-line computation or calculation!\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Code",
      "Inline Code"
    ]
  },
  {
    "objectID": "sourcing-code.html",
    "href": "sourcing-code.html",
    "title": "Sourcing Code",
    "section": "",
    "text": "Exercises\nThe R script do_addition.R and the Python script do_addition.py in the scripts folder contain a function to perform simple addition. The function takes two numbers as arguments, adds them together, and outputs the result to the console.",
    "crumbs": [
      "Code",
      "Sourcing Code"
    ]
  },
  {
    "objectID": "sourcing-code.html#exercises",
    "href": "sourcing-code.html#exercises",
    "title": "Sourcing Code",
    "section": "",
    "text": "Add a new code chunk to your manuscript that includes the do_addition function into your Quarto document.\nUse the do_addition function to add two numbers of your choice to test whether your answer in a was correct!\n\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Code",
      "Sourcing Code"
    ]
  },
  {
    "objectID": "rendering.html",
    "href": "rendering.html",
    "title": "Rendering",
    "section": "",
    "text": "Exercise\nOPTIONAL:",
    "crumbs": [
      "Rendering"
    ]
  },
  {
    "objectID": "rendering.html#exercise",
    "href": "rendering.html#exercise",
    "title": "Rendering",
    "section": "",
    "text": "Render your Quarto document to docx using both:\n\n\nthe quarto R package\nthe Terminal\n\n\nAdjust the YAML to include both html & docx and re-render the document.\n\n\n\nRender your Quarto document to pdf.\nTry out the PLOS Journal Template.\n\n\nsimply obtain the template and render it, no need to make changes to the content.\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "Rendering"
    ]
  },
  {
    "objectID": "what-next.html",
    "href": "what-next.html",
    "title": "What Next?",
    "section": "",
    "text": "What To Learn?\nDynamic Document Generation is one of the first steps towards reproducible manuscripts. The following topics are worth exploring to round of this area knowledge and skill:",
    "crumbs": [
      "What Next?"
    ]
  },
  {
    "objectID": "what-next.html#what-to-learn",
    "href": "what-next.html#what-to-learn",
    "title": "What Next?",
    "section": "",
    "text": "Dependency Management\n\n\n\n9. Dependencies from Barboletas on Vimeo.\n\n\n\nVersion Control\n\n\n\n\nArchiving & Publishing\n\n\n\n11. Archive with Zenodo from Barboletas on Vimeo.",
    "crumbs": [
      "What Next?"
    ]
  },
  {
    "objectID": "what-next.html#where-to-find-us",
    "href": "what-next.html#where-to-find-us",
    "title": "What Next?",
    "section": "Where To Find Us",
    "text": "Where To Find Us\n\nProgramming Café: A community event where you can work on your own projects for a large part of the session. Somewhere in between, we will do a small tutorial on useful programming tips/trick/practices. The Programming Café occurs on a monthly basis, usually the first Thursday of every month.\nWalk-In Hours for Data & Software Support: This takes place every Monday from 15:00 to 17:00 at the University Library in the Science Park. We are available to help with any questions related to research data management and/or programming.\nYou can check out our other workshops on the RDM Support website.\n\n\n\n\n\nFrank, Mike, and Chris Hartgerink. 2017. “RMarkdown for Writing Reproducible Scientific Papers.” https://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using R Markdown.” eLife. https://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown; eLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.” The Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey Through Open Science.” Communications Physics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with Quarto - Getting Started with Quarto.” https://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto - Rstudio::conf 2022 Workshop.” https://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.” Quarto. https://quarto.org/docs/guide/. Accessed November 21, 2023.\n\n\nThe Turing Way Community. n.d. “Research Compendia.” The Turing Way. https://the-turing-way.netlify.app/reproducible-research/compendia. Accessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for Scientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena Lamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede. 2021. “WORCS: A Workflow for Open Reproducible Code in Science.” Data Science 4 (1): 29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "What Next?"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Frank, Mike, and Chris Hartgerink. 2017. “RMarkdown\nfor Writing Reproducible Scientific Papers.”\nhttps://libscie.github.io/rmarkdown-workshop/handout.html.\n\n\nHartgerink, Chris. 2017. “Composing Reproducible Manuscripts Using\nR Markdown.” eLife.\nhttps://elifesciences.org/labs/cad57bcf/composing-reproducible-manuscripts-using-r-markdown;\neLife Sciences Publications Limited.\n\n\nKnuth, D. E. 1984. “Literate Programming.”\nThe Computer Journal 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.\n\n\nLasser, Jana. 2020. “Creating an Executable Paper Is a Journey\nThrough Open Science.” Communications\nPhysics 3 (1): 1–5. https://doi.org/10.1038/s42005-020-00403-4.\n\n\nMock, Tom. 2022a. “Get Started with\nQuarto - Getting Started with\nQuarto.”\nhttps://jthomasmock.github.io/quarto-2hr-webinar/.\n\n\n———. 2022b. “Get Started with Quarto -\nRstudio::conf 2022 Workshop.”\nhttps://rstudio-conf-2022.github.io/get-started-quarto/.\n\n\nQuarto. n.d. “Quarto - Guide.”\nQuarto. https://quarto.org/docs/guide/. Accessed November 21,\n2023.\n\n\nThe Turing Way Community. n.d. “Research\nCompendia.” The Turing Way.\nhttps://the-turing-way.netlify.app/reproducible-research/compendia.\nAccessed November 21, 2023.\n\n\nTierney, Nicholas. 2025. “Quarto for\nScientists.” https://qmd4sci.njtierney.com/.\n\n\nVan Lissa, Caspar J., Andreas M. Brandmaier, Loek Brinkman, Anna-Lena\nLamprecht, Aaron Peikert, Marijn E. Struiksma, and Barbara M. I. Vreede.\n2021. “WORCS: A Workflow for Open\nReproducible Code in Science.” Data Science 4 (1):\n29–49. https://doi.org/10.3233/DS-210031.",
    "crumbs": [
      "References"
    ]
  }
]