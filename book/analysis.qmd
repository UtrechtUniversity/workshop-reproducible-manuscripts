# Analysis {.unnumbered}

- talk about code chunks
- labelling code chunks
- code chunk options (hide, evaluate, and so on)
- eventually...sourcing scripts

Here's how it goes in RStudio:

# Analysis

Unlike regular R scripts, code in R Markdown documents is run within so-called _code chunks_ to separate text from code.

You can insert code chunks by: 

- using the _Add Chunk_ button in RStudio's editor toolbar,
    
- using keyboard shortcuts **Ctrl + Alt + I** on Windows and **Cmd + Option + I** on MacOS,

- or by typing the chunk delimiters ```{r} and ```.

If the default code chunk options are in place, rendering your R Markdown file will involve each code chunk being run and the results being embedded beneath the code chunk in the final document.

## Code Chunk Options

Chunks can be customized using the following options:

- `include = FALSE` prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.

- `echo = FALSE` prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.

- `message = FALSE` prevents messages that are generated by code from appearing in the finished file.

- `warning = FALSE` prevents warnings that are generated by code from appearing in the finished.

- `fig.cap = "..."` adds a caption to graphical results.

The code chunk option has to be specified within the top chunk delimiter: ```{r}

For example, ```{r echo=FALSE, warning=TRUE}

### Exercise

Like the previous exercise, we're providing some code that you could place in your R Markdown document.

- First, insert a setup code chunk t the beginning of your document (i.e. below the YAML header) to specify the working directory.

- Use the following workflow for the rest of the script: 
    
    - create a code chunk in the `Results` section of your document, 
    
    - copy a piece/section of the script and paste it into the code chunk,

    - run the code chunk and see if it works alright,

    - repeat the previous three steps until the whole dummy script has been incorporated within code chunks in your manuscript.

- Render the document and check the output.

- Play around with different code chunk options. Which chunk option would hide the code and only show results, as you might like in a final manuscript?

- Insert a sentence or two in the `Results` section about the mean flipper length and mean bill length. Use _inline R code_ to: 

    - calculate the mean flipper length within the text itself

    - report the mean bill length directly from the `mean` data frame

- Render the document again and observe the differences with the code chunks and inline code.
